name: Deploy to VM Broo

on:
  push:
    branches:
      - master  # Adjust this to your deployment branch

jobs:
  build-and-upload-to-docker-hub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: indrafajar/pelanggaran:latest  # Update this

  # deploy-vm1:
  #   runs-on: ubuntu-latest
  #   needs: build-and-upload-to-docker-hub
  #   steps:
  #     - name: Deploy to VM
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_KEY }}
  #         HOST: ${{ secrets.VM_HOST }}  # Update with your VM IP
  #         USER: ${{ secrets.VM_USERNAME }}
  #       run: |
  #         echo "${SSH_PRIVATE_KEY}" > /tmp/vm_key
  #         chmod 600 /tmp/vm_key

  #         ssh -o StrictHostKeyChecking=no -i /tmp/vm_key $USER@$HOST << 'EOF'
  #           docker pull indrafajar/index-be:latest
  #           docker stop index-be || true
  #           docker rm index-be || true
  #           docker run -d --name index-be --env-file ~/index-be/.env --restart unless-stopped --network pos-app -p 3100:3000 indrafajar/index-be:latest
  #           docker image prune -f
  #         EOF
    
  deploy-vm:
    runs-on: ubuntu-latest
    needs: build-and-upload-to-docker-hub
    steps:
      - name: Deploy to VM
        env:
          HOST: ${{ secrets.VM_HOST }}  # Update with your VM IP
          USER: ${{ secrets.VM_USERNAME }}
          PASSWORD: ${{ secrets.VM_PASSWORD }}
        run: |
          sshpass -p "${PASSWORD}" ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            docker pull indrafajar/pelanggaran:latest
            docker stop pelanggaran-run || true
            docker rm pelanggaran-run || true
            docker run -d --name pelanggaran-run --restart unless-stopped --network my-app -p 4000:3000 indrafajar/pelanggaran:latest
            docker cp ~/pelanggaran-be/.env pelanggaran-run:/usr/src/app/
            docker restart pelanggaran-run
            docker image prune -f
          EOF